apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-deploy
  namespace: yogender027mae-dev
spec:
  steps:
  - name: clone
    image: golang
    script: |
      #!/bin/bash
      git clone https://github.com/yogenderPalChandra/highscore-game/tree/highscore-forcommerzebank /workspace/src
  - name: configure-project
    image: image-registry.openshift-image-registry.svc:5000/openshift/cli
    script: |
      #!/bin/bash
      set -euo pipefail
      cd /workspace/src/ci
      oc apply -f imagestream.yaml
      oc apply -f buildconfig.yaml
  - name: build
    image: image-registry.openshift-image-registry.svc:5000/openshift/cli
    script: |
      #!/bin/bash
      set -euo pipefail
      oc start-build -F highscore -n yogender027mae-dev
  - name: deploy
    image: image-registry.openshift-image-registry.svc:5000/openshift/cli
    script: |
      #!/bin/bash
      set -euxo pipefail
      cd /workspace/src/ci
      oc apply -f deployment.yaml
      BUILDDATE=$(date +%Y-%m-%d-%H%M%S)
      oc patch deployment highscore -p \
      "{\"spec\":{\"template\":{\"metadata\":{\"labels\":\
      {\"last-build\":\"$BUILDDATE\"}}}}}"
      oc apply -f service.yaml
      # Generate and apply route
      HOSTNAME="yogender027mae-dev.$(oc get ingresses.config.openshift.io \
      cluster -o jsonpath='{.spec.domain}')"
      oc apply -f <(cat <<-EOF
        apiVersion: route.openshift.io/v1
        kind: Route
        metadata:
          labels:
            app: highscore
          name: highscore
          namespace: yogender027mae-dev
        spec:
          host: $HOSTNAME
          path: /highscore
          port:
            targetPort: 8080
          to:
            kind: Service
            name: highscore
      EOF
      )